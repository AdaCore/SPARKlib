Assert_Failure should be raised if SPARKlib_Defensive is enabled and Constraint_Error should be raised otherwise
In last chance handler
User defined exception, message: failed precondition from spark-containers-formal-doubly_linked_lists.ads:1512 i
now suspending
main.adb:30:13: info: implicit aspect Always_Terminates on "Hash" has been proved, subprogram will terminate
spark-big_integers.ads:31:32: warning: function Is_Valid is assumed to return True
spark-big_integers.ads:55:17: warning: function Is_Valid is assumed to return True
spark-big_integers.ads:61:17: warning: function Is_Valid is assumed to return True
spark-big_reals.ads:34:32: warning: function Is_Valid is assumed to return True
spark-containers-formal-hashed_maps.ads:82:06: medium: Container_Aggregates annotation might be incorrect, in instantiation at main.adb:32
spark-containers-formal-hashed_maps.ads:82:06: medium: Container_Aggregates annotation might be incorrect, in instantiation at main.adb:32
spark-containers-formal-hashed_maps.ads:82:06: medium: after a call to Insert at spark-containers-formal-hashed_maps.ads:688, in instantiation at main.adb:32
spark-containers-formal-hashed_maps.ads:82:06: medium: after a call to Insert at spark-containers-formal-hashed_maps.ads:688, in instantiation at main.adb:32
spark-containers-formal-hashed_maps.ads:82:06: medium: when reestablishing invariant on Get at spark-containers-functional-maps.ads:139, in instantiation at spark-containers-formal-hashed_maps.ads:160, in instantiation at main.adb:32
spark-containers-formal-hashed_maps.ads:82:06: medium: when reestablishing invariant on Has_Key at spark-containers-functional-maps.ads:121, in instantiation at spark-containers-formal-hashed_maps.ads:160, in instantiation at main.adb:32
spark-containers-formal-hashed_sets.ads:82:06: medium: Container_Aggregates annotation might be incorrect, in instantiation at main.adb:31
spark-containers-formal-hashed_sets.ads:82:06: medium: after a call to Insert at spark-containers-formal-hashed_sets.ads:729, in instantiation at main.adb:31
spark-containers-formal-hashed_sets.ads:82:06: medium: when reestablishing invariant on Contains at spark-containers-functional-sets.ads:95, in instantiation at spark-containers-formal-hashed_sets.ads:154, in instantiation at main.adb:31
spark-lemmas-floating_point_arithmetic.ads:215:33: medium: range check might fail, cannot prove lower bound for F, in instantiation at spark-lemmas-float_arithmetic.ads:13 [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at line 211 should mention F in a precondition]
spark-lemmas-floating_point_arithmetic.ads:223:33: medium: range check might fail, cannot prove lower bound for F, in instantiation at spark-lemmas-float_arithmetic.ads:13 [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at line 219 should mention F in a precondition]
spark-lemmas-floating_point_arithmetic.ads:232:29: medium: range check might fail, cannot prove lower bound for Fl (I), in instantiation at spark-lemmas-float_arithmetic.ads:13 [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at line 228 should mention I in a precondition]
spark-lemmas-floating_point_arithmetic.ads:241:29: medium: range check might fail, cannot prove lower bound for Fl (I), in instantiation at spark-lemmas-float_arithmetic.ads:13 [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at line 237 should mention I in a precondition]
spark-lemmas-floating_point_arithmetic.ads:252:31: medium: range check might fail, cannot prove lower bound for F, in instantiation at spark-lemmas-float_arithmetic.ads:13 [reason for check: value must be convertible to the target type of the conversion] [possible fix: subprogram at line 245 should mention F in a precondition]
main.adb:40:06: warning: variable "L" is read but never assigned [-gnatwv]
