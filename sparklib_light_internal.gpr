with "sparklib_common";

--  This project file is intended for use with reduced runtimes without
--  Ada.Numerics.Big_Numbers or Ada.Finalization units.

project SPARKlib_Light_Internal is

   for Externally_Built use SPARKlib_common.SPARKlib_Installed;

   -- This project is not supposed to be used directly. Instead, copy
   -- sparklib_light.gpr.templ as sparklib_light.gpr in your code and provide
   -- appropriate values for the object directory Object_Dir (so that compilation
   -- and artifacts are generated in directories under your control) and the list
   -- of excluded source files Excluded_Source_Files (so that you only compile and
   -- analyse files from the library that you need).

   for Source_Dirs use (SPARKlib_common.Root, SPARKlib_common.Root & "/light");

   case SPARKlib_common.SPARKlib_Installed is
      when "True" =>
         null;
      when others =>
         for Object_Dir use "obj";
   end case;

   SPARK_Body_Mode : SPARKlib_common.SPARK_Body_Mode_T := SPARKlib_common.SPARK_Body_Mode;

   package Compiler renames SPARKlib_common.Compiler;

   package Prove renames SPARKlib_common.Prove;

   Common_Default_Switches := SPARKlib_Common.Common_Default_Switches;

   case SPARK_Body_Mode is
      when "On" =>
         for Excluded_Source_Files use ("spark.ads");
      when "Off" =>
         for Excluded_Source_Files use ("spark__exec.ads");
   end case;

   package Naming is
      case SPARK_Body_Mode is
         when "On" =>
            for Spec ("SPARK") use "spark__exec.ads";
         when "Off" =>
            null;
      end case;
   end Naming;

end SPARKlib_Light_Internal;
